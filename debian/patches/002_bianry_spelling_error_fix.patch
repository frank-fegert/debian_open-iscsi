Fix many spelling errors in source code
Index: b/usr/initiator.c
===================================================================
--- a/usr/initiator.c	2010-06-08 19:05:09.897023779 +0530
+++ b/usr/initiator.c	2010-06-08 19:15:55.741530753 +0530
@@ -1719,7 +1719,7 @@
 	case STATE_LOGGED_IN:
 	case STATE_IN_LOGOUT:
 	case STATE_LOGOUT_REQUESTED:
-		/* read incomming PDU */
+		/* read incoming PDU */
 		if (!iscsi_io_recv_pdu(conn, &hdr, ISCSI_DIGEST_NONE,
 			    conn->data, ISCSI_DEF_MAX_RECV_SEG_LEN,
 			    ISCSI_DIGEST_NONE, 0)) {
@@ -1743,12 +1743,12 @@
 		break;
 	case STATE_XPT_WAIT:
 		iscsi_conn_context_put(conn_context);
-		log_debug(1, "ignoring incomming PDU in XPT_WAIT. "
+		log_debug(1, "ignoring incoming PDU in XPT_WAIT. "
 			  "let connection re-establish or fail");
 		break;
 	case STATE_CLEANUP_WAIT:
 		iscsi_conn_context_put(conn_context);
-		log_debug(1, "ignoring incomming PDU in XPT_WAIT. "
+		log_debug(1, "ignoring incoming PDU in XPT_WAIT. "
 			  "let connection cleanup");
 		break;
 	default:
Index: b/usr/initiator.h
===================================================================
--- a/usr/initiator.h	2010-06-08 19:05:09.885024827 +0530
+++ b/usr/initiator.h	2010-06-08 19:15:55.741530753 +0530
@@ -143,7 +143,7 @@
 	int socket_fd;
 	/* address being used for normal session connection */
 	struct sockaddr_storage saddr;
-	/* address recieved during login */
+	/* address received during login */
 	struct sockaddr_storage failback_saddr;
 	int tcp_window_size;
 	int type_of_service;
Index: b/usr/netlink.c
===================================================================
--- a/usr/netlink.c	2010-06-08 19:05:09.865053112 +0530
+++ b/usr/netlink.c	2010-06-08 19:17:19.441107030 +0530
@@ -282,7 +282,7 @@
 				}
 				if (ev->iferror == -ENOSYS)
 					/* not fatal so let caller handle log */
-					log_debug(1, "Recieved iferror %d: %s",
+					log_debug(1, "Received iferror %d: %s",
 						  ev->iferror,
 						  strerror(ev->iferror));
 				else if (ev->iferror < 0)
@@ -831,7 +831,7 @@
 	ev.u.ep_disconnect.ep_handle = conn->transport_ep_handle;
 
 	if ((rc = __kipc_call(&ev, sizeof(ev))) < 0) {
-		log_error("connnection %d:%d transport disconnect failed for "
+		log_error("connection %d:%d transport disconnect failed for "
 			  "ep %" PRIu64 " with error %d.", conn->session->id,
 			  conn->id, conn->transport_ep_handle, rc);
 	} else
