--- a/iscsiuio/src/unix/libs/bnx2x.c
+++ b/iscsiuio/src/unix/libs/bnx2x.c
@@ -369,6 +369,7 @@
 		return -EIO;
 	}
 
+	memset(&drvinfo, 0, sizeof(drvinfo));
 	drvinfo.cmd = ETHTOOL_GDRVINFO;
 	ifr.ifr_data = (caddr_t) &drvinfo;
 	rc = ioctl(fd, SIOCETHTOOL, &ifr);
--- a/iscsiuio/src/unix/packet.c
+++ b/iscsiuio/src/unix/packet.c
@@ -38,6 +38,7 @@
  */
 #include <errno.h>
 #include <stdio.h>
+#include <string.h>
 
 #include "logger.h"
 #include "packet.h"
@@ -59,12 +60,14 @@
 		LOG_ERR("Could not allocate any memory for packet");
 		return NULL;
 	}
+	memset(pkt, 0, max_buf_size + sizeof(struct packet));
 
 	priv = malloc(priv_size);
 	if (priv == NULL) {
 		LOG_ERR("Could not allocate any memory for private structure");
 		goto free_pkt;
 	}
+	memset(priv, 0, priv_size);
 
 	pkt->max_buf_size = max_buf_size;
 	pkt->priv = priv;
